// Generated by Copilot
import React, { useState, useMemo } from 'react';
import { useCocktail } from '../../context/CocktailContext';
import CocktailCard from './CocktailCard';
import { Grid, Section, Title } from '../ui/StyledComponents';
import { Cocktail } from '../../types/cocktail';

const CocktailList: React.FC = () => {
  const { filteredCocktails } = useCocktail();
  const [hiddenCocktails, setHiddenCocktails] = useState<Set<string>>(new Set());

  // Filter out hidden cocktails
  const displayedCocktails = useMemo(() => {
    return filteredCocktails.filter(cocktail => 
      !hiddenCocktails.has(cocktail.name)
    );
  }, [filteredCocktails, hiddenCocktails]);

  const _hideCocktail = (cocktail: Cocktail) => {
    setHiddenCocktails(prev => {
      const newSet = new Set(prev);
      newSet.add(cocktail.name);
      return newSet;
    });
  };

  return (
    <Section>
      <Title style={{ fontSize: '1.5rem' }}>Cocktails</Title>
      
      {displayedCocktails.length === 0 ? (
        <p>No cocktails found. Try selecting different ingredients or adjusting your search.</p>
      ) : (
        <Grid>
          {displayedCocktails.map((cocktail, index) => (
            <CocktailCard
              key={`${cocktail.name}-${index}`}
              cocktail={cocktail}
              onClose={() => _hideCocktail(cocktail)}
            />
          ))}
        </Grid>
      )}
    </Section>
  );
};

export default CocktailList;