// Generated by Copilot
import React, { useState, useRef, useEffect } from 'react';
import { SearchInput, DropdownContainer, DropdownMenu, DropdownItem } from './StyledComponents';

interface SearchBarProps<T> {
  items: T[];
  onSelect: (item: T) => void;
  getItemLabel: (item: T) => string;
  placeholder?: string;
  onSearch: (searchTerm: string) => void;
}

const SearchBar = <T,>({
  items,
  onSelect,
  getItemLabel,
  placeholder = 'Search...',
  onSearch,
}: SearchBarProps<T>) => {
  const [isOpen, setIsOpen] = useState(false);
  const [searchTerm, setSearchTerm] = useState('');
  const containerRef = useRef<HTMLDivElement | null>(null);
  
  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {
    const value = e.target.value;
    setSearchTerm(value);
    onSearch(value);
    
    // Show dropdown when typing
    if (value) {
      setIsOpen(true);
    } else {
      setIsOpen(false);
    }
  };
  
  const handleSelect = (item: T) => {
    onSelect(item);
    setSearchTerm('');
    setIsOpen(false);
  };
  
  // Close dropdown when clicking outside
  useEffect(() => {
    const handleClickOutside = (event: MouseEvent) => {
      if (containerRef.current && !containerRef.current.contains(event.target as Node)) {
        setIsOpen(false);
      }
    };
    
    document.addEventListener('mousedown', handleClickOutside);
    return () => {
      document.removeEventListener('mousedown', handleClickOutside);
    };
  }, []);
  
  return (
    <DropdownContainer ref={containerRef}>
      <SearchInput
        type="text"
        placeholder={placeholder}
        value={searchTerm}
        onChange={handleSearch}
        onFocus={() => searchTerm && setIsOpen(true)}
      />
      
      {isOpen && items.length > 0 && (
        <DropdownMenu>
          {items.slice(0, 10).map((item, index) => (
            <DropdownItem
              key={index}
              onClick={() => handleSelect(item)}
            >
              {getItemLabel(item)}
            </DropdownItem>
          ))}
        </DropdownMenu>
      )}
    </DropdownContainer>
  );
};

export default SearchBar;