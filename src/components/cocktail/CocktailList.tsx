// Generated by Copilot
import React, { useState, useMemo } from 'react';
import { useCocktail } from '../../context/CocktailContext';
import CocktailCard from './CocktailCard';
import { useFuzzySearch } from '../../hooks/useFuzzySearch';
import { Grid, SearchInput, Section, Title } from '../ui/StyledComponents';
import { Cocktail } from '../../types/cocktail';

const CocktailList: React.FC = () => {
  const { filteredCocktails } = useCocktail();
  const [searchTerm, setSearchTerm] = useState('');
  const [hiddenCocktails, setHiddenCocktails] = useState<Set<string>>(new Set());

  // Use fuzzy search for cocktails
  const { results } = useFuzzySearch({
    items: filteredCocktails,
    keys: ['name', 'ingredients'],
    threshold: 0.3,
  });

  // Apply search filter
  const displayedCocktails = useMemo(() => {
    return searchTerm
      ? results.filter(cocktail => !hiddenCocktails.has(cocktail.name))
      : filteredCocktails.filter(cocktail => !hiddenCocktails.has(cocktail.name));
  }, [results, filteredCocktails, searchTerm, hiddenCocktails]);

  const hideCocktail = (cocktail: Cocktail) => {
    setHiddenCocktails(prev => {
      // Create a new Set with the previous values
      const newSet = new Set(prev);
      // Add the new cocktail name
      newSet.add(cocktail.name);
      return newSet;
    });
  };

  return (
    <Section>
      <Title style={{ fontSize: '1.5rem' }}>Cocktails</Title>
      
      <SearchInput
        type="text"
        placeholder="Search cocktails by name or ingredients..."
        value={searchTerm}
        onChange={(e) => setSearchTerm(e.target.value)}
      />
      
      {displayedCocktails.length === 0 ? (
        <p>No cocktails found. Try selecting different ingredients or adjusting your search.</p>
      ) : (
        <Grid>
          {displayedCocktails.map((cocktail, index) => (
            <CocktailCard
              key={`${cocktail.name}-${index}`}
              cocktail={cocktail}
              onClose={() => hideCocktail(cocktail)}
            />
          ))}
        </Grid>
      )}
    </Section>
  );
};

export default CocktailList;